* JSR-352を読んでみよう

** Introduction to JSR 352
   Batch processing is a pervasive workload pattern, expressed by a distinct application organization and execution model. It is found across virtually every industry, applied to such tasks as statement generation, bank postings, risk evaluation, credit score calculation, inventory management, portfolio optimization, and on and on. Nearly any bulk processing task from any business sector is a candidate for batch processing.

   バッチ処理とは負荷の高くなる作業パターンであり、アプリケーションの構成や実行モデルとは区別して表現される。これらはすべての産業に実質的に見出すことができ様々な作業に適用できる。報告書作成、金融会計、リスク評価、クレジットスコア計算、在庫管理、ポートフォリオ最適化、などなど。だいたいのビジネス上のバルク処理タスクはバッチ処理と言えるだろう。

   Batch processing is typified by bulk-oriented, non-interactive, background execution. Frequently long-running, it may be data or computationally intensive, execute sequentially or in parallel, and may be initiated through various invocation models, including ad hoc, scheduled, and on-demand. Batch applications have common requirements, including logging, checkpointing, and parallelization. Batch workloads have common requirements, especially operational control, which allow for initiation of, and interaction with, batch instances; such interactions include stop and restart.

   バッチ処理というのは典型的にはバルク志向、インタラクティブでなく、バックグラウンドで実行される。しばしば長時間実行され、データや計算資源を集中的に利用し、直列的または並列に実行され、様々なモデルを起動するかもしれない、アドホック処理を含み、スケジューリングされ、オンデマンドある。バッチアプリケーションは一般的に、ロギング、チェックポイント、並行性が求められる。バッチの作業は一般的に開始時、相互作用発生時に著しい運行管理が求められる。複数のバッチの処理には停止と再実行のインタラクションを含む。
